% 
% CECILIA2050 - Scenarios for 2050 for a 2-degrees world
% Copyright (c) 2014 Instituute of Environmental Sciences (CML) Universiteit Leiden
%  
% This program is free software; you can redistribute it and/or modify it under
% the terms of the GNU General Public License as published by the Free Software
% Foundation; either version 2 of the License, or (at your option) any later
% version.
%  
% This program is distributed in the hope that it will be useful, but WITHOUT
% ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
% FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
% details.
%  
% You should have received a copy of the GNU General Public License along with
% this program; if not, write to the Free Software Foundation, Inc., 51
% Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
% 

%
% Taking the well balanced SUTs as generated by the preprocessing script, 
% the economic development scenarios until 2050 are implemented in the SUTs 
% by adjusting the transactions in a systematic way. In a first step a 
% general efficiency change is applied to the whole world economy. In essence
% for the same amount of products produced, less products are used which 
% leads to extra revenues that flow towards final consumers. The efficiency 
% change leads to economic growth and changes in volume of international trade.
% In the following step the already obtained economic growth is further adjusted to 
% reflect the economic growth we expect to see until 2050. These changes impact 
% international trade volumes as well.
%

% program settings
clear -x time_start;
more off;
datadir = strcat(pwd(),'/../preprocess/');
utildir = strcat(pwd(),'/../util/');
scendir = strcat(pwd(),'/../scenarios/');
addpath(utildir);
addpath(scendir);
dim = 4;                        % number of regions
fid = fopen ('log.txt', 'w');   % logging 


% read files
U = dlmread(strcat(datadir,'U.txt'), '\t');
V = dlmread(strcat(datadir,'V.txt'), '\t');
W = dlmread(strcat(datadir,'W.txt'), '\t');
Y = dlmread(strcat(datadir,'Y.txt'), '\t');
M = dlmread(strcat(datadir,'M.txt'), '\t');
FM = dlmread(strcat(datadir,'FM.txt'), '\t');
R = dlmread(strcat(datadir,'R.txt'), '\t');

if (checksanity(U, V, W, Y, dim) == 0)
  input('hit enter to continue after sanity check');
endif


% scenario for the development of the economy until 2050
gdpfactor = dlmread('GDPVector.txt','\t');    % gdp growth factors for each region 
efficfactor = dlmread('EffVector.txt','\t');  % general efficiency improvement in every sector;


% initialisation
p_count = rows(U)/dim;
i_count = columns(U)/dim;
y_count = columns(Y)/dim;
w_count = rows(W);
m_count = rows(M);
 
  % properties of initial supply-use tables
  efficiency_initial = efficiency(U, V);
  gdp_income_init = gdpincome(W, dim);
  gdp_expenditure_init = gdpexpenditure(U, Y, dim);
  gdp_production_init = gdpproduction(U, Y, dim);
  [Itvolumes_init, Dtvolumes_init] = importtradevolumes(U, Y, dim);
	  
	  % export to log
	  fdisp(fid, 'Properties initial');
	  fdisp(fid, 'GDP income approach:');
	  fdisp(fid, gdp_income_init);
	  fdisp(fid, 'GDP expenditure approach:');
	  fdisp(fid, gdp_expenditure_init);
	  fdisp(fid, 'GDP production approach:');
	  fdisp(fid, gdp_production_init);
	  fdisp(fid, 'Intermediate international trade:');
	  fdisp(fid, Itvolumes_init);
	  fdisp(fid, 'Direct international trade:');
	  fdisp(fid, Dtvolumes_init);
	  fdisp(fid, 'Check balance:');
	  if (checkbalance(U, V, W, Y, dim) == 1) 
	    fdisp(fid, '   Balance OK');
	  else
	    fdisp(fid, '   Not balanced');
	  endif
	  fdisp(fid,'');
	  fdisp(fid,'');

	  
  % apply efficiency change
  printf('\nScenario: Efficiency change\n');
  [U, V, W, Y, M, FM, R] = efficiencychange(U, V, W, Y, M, FM, R, efficfactor, dim);
  printf('Efficiency change ready\n\n');
  
   
  % total product and industry output
  checkbalance(U, V, W, Y, dim);
  checkcarbonbalance(M, FM, R); 
  q1 = tpou(U, Y);
  q2 = tpom(V);
  g1 = tiou(U, W);
  g2 = tiom(V);
  gdp_income = gdpincome(W, dim)
  gdp_expenditure = gdpexpenditure(U, Y, dim)
  gdp_production = gdpproduction(U, Y, dim)  
  input('continue');
  

	  % export to log
	  fdisp(fid, 'Properties after general efficiency change');
	  fdisp(fid, 'GDP income approach:');
	  fdisp(fid, gdpincome(W, dim));
	  fdisp(fid, 'GDP expenditure approach:');
	  fdisp(fid, gdpexpenditure(U, Y, dim));
	  fdisp(fid, 'GDP production approach:');
	  fdisp(fid, gdpproduction(U, Y, dim)); 
	  [Itvolumes, Dtvolumes] = importtradevolumes(U, Y, dim);
	  fdisp(fid, 'Intermediate international trade:');
	  fdisp(fid, Itvolumes);
	  fdisp(fid, 'Direct international trade:');
	  fdisp(fid, Dtvolumes);
	  fdisp(fid, 'Check balance:');
	  if (checkbalance(U, V, W, Y, dim) == 1) 
	    fdisp(fid, '   Balance OK');
	  else
	    fdisp(fid, '   Not balanced');
	  endif
	  fdisp(fid,'');
	  fdisp(fid,'');
  
  
  % calculate remaining GDP change
  printf('Scenario: GDP change\n');
  gdp_current = gdpincome(W, dim);
  gdp_target = gdp_income_init .* gdpfactor;
  gdpfactor_remaining = gdp_target ./ gdp_current
	  fdisp(fid, 'Remaining GDP factors to be applied');
	  fdisp(fid,  gdpfactor_remaining);
	  fdisp(fid,'');
	  fdisp(fid,'');
	  
	  
  % apply remaining GDP change	      
  [U, V, W, Y, M, FM] = gdpchange(U, V, W, Y, M, FM, gdpfactor_remaining, dim);
  printf('GDP change ready\n');
  
  
  % calculate some extra properties
  efficiency_end = efficiency(U, V);
  accomplished_eff = efficiency_end ./ efficiency_initial;
  
  
	  % export to log
	  fdisp(fid, 'Properties after GDP change');
	  fdisp(fid, 'GDP income approach:');
	  fdisp(fid, gdpincome(W, dim));
	  fdisp(fid, 'GDP expenditure approach:');
	  fdisp(fid, gdpexpenditure(U, Y, dim));
	  fdisp(fid, 'GDP production approach:');
	  fdisp(fid, gdpproduction(U, Y, dim)); 
	  [Itvolumes, Dtvolumes] = importtradevolumes(U, Y, dim);
	  fdisp(fid, 'Intermediate international trade:');
	  fdisp(fid, Itvolumes);
	  fdisp(fid, 'Direct international trade:');
	  fdisp(fid, Dtvolumes);
	  fdisp(fid, 'Check balance:');
	  if (checkbalance(U, V, W, Y, dim) == 1) 
	    fdisp(fid, '   Balance OK');
	  else
	    fdisp(fid, '   Not balanced');
	  endif
	  fdisp(fid,'');
	  fdisp(fid,'');
	  
  
  
  
  % export supply - use tables
  dlmwrite('Uend.txt', U, '\t');
  dlmwrite('Vend.txt', V, '\t');
  dlmwrite('Wend.txt', W, '\t');
  dlmwrite('Yend.txt', Y, '\t');
  dlmwrite('Mend.txt', M, '\t');
  dlmwrite('FMend.txt', FM, '\t');
  dlmwrite('accomplished_efficiencies.txt', accomplished_eff, '\t');
  
  
  
  % output
  fclose(fid);
  